//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Inputs/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Robot"",
            ""id"": ""731878d3-9eb5-455c-a94e-1b2187265047"",
            ""actions"": [
                {
                    ""name"": ""LHorizontal"",
                    ""type"": ""Value"",
                    ""id"": ""1018fc26-4f56-4b74-9120-ff35d85845f0"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LVertical"",
                    ""type"": ""Value"",
                    ""id"": ""610f29df-14dd-4839-a439-ec62edf95cb5"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RHorizontal"",
                    ""type"": ""Value"",
                    ""id"": ""d2cc3470-7cac-4952-a7a8-21de7d83585a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RVertical"",
                    ""type"": ""Value"",
                    ""id"": ""7a9f0295-7ee8-45a1-81a2-8cbb331e94da"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Wrist"",
                    ""type"": ""Value"",
                    ""id"": ""b89aac51-6124-44c0-b3e7-9e9bf6375b72"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jaw"",
                    ""type"": ""Value"",
                    ""id"": ""d2cf0b30-ce52-44f0-8460-f2a45449bd12"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""982fabc1-61f5-4576-bcd7-5a832373e112"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""LHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""0bed7796-46e9-4ecc-b9d4-b35c80be2c10"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LHorizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f5caec44-19fe-44e1-9936-68a575c05c74"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""578cfa24-2a85-4fbd-9634-c7d903c4271e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""bff78862-466f-4bf4-a072-a79b1a2a6fbc"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""LVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""539069f4-0f52-46e6-815c-a0a076f3c962"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LVertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e8a58932-a486-4da4-ad41-2b4995e388c2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f9f8830a-cbb8-456d-bb04-7653fb456d66"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cadb5f12-ba0e-4a3e-bed7-dfa4f8702bb9"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""RHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""3056d6ee-9042-4273-adf3-dea8ee0f99c3"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RHorizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a9749bd7-589e-4421-aab9-4e4364a57867"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ae6fb490-8ef5-42d3-993d-fa522fe2c2c9"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""79ed4d64-073e-4d50-b9c7-572230935be5"",
                    ""path"": ""<Gamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""RVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""8b6649ca-e50f-413f-93ee-333f1ec0fe18"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RVertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""3279108a-734f-489c-b56f-a668acc9f1c6"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4dc6528a-80f9-47f1-a6de-b1c9aa7386bf"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4bf1b1e3-ccad-47e4-8f33-d5b9a1615880"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""Wrist"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23f9644a-3abf-43c8-b54e-a6df553ca8d5"",
                    ""path"": ""<Gamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""Wrist"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""eb4902b8-e320-45f2-9a83-1898d29b1728"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wrist"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""7f81f89f-8c49-4dfc-9dcf-76d16534b83e"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wrist"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ef862bf9-d81a-4ca7-bb51-e27df6a76085"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Wrist"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""edb21cd5-0501-4142-bd85-b5f0465eaf0f"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": ""AxisDeadzone"",
                    ""groups"": """",
                    ""action"": ""Jaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""9b382574-f308-488a-a650-73fc70c7af90"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""1b31ffd7-36da-42a5-8c19-ce67faa943f1"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Robot
        m_Robot = asset.FindActionMap("Robot", throwIfNotFound: true);
        m_Robot_LHorizontal = m_Robot.FindAction("LHorizontal", throwIfNotFound: true);
        m_Robot_LVertical = m_Robot.FindAction("LVertical", throwIfNotFound: true);
        m_Robot_RHorizontal = m_Robot.FindAction("RHorizontal", throwIfNotFound: true);
        m_Robot_RVertical = m_Robot.FindAction("RVertical", throwIfNotFound: true);
        m_Robot_Wrist = m_Robot.FindAction("Wrist", throwIfNotFound: true);
        m_Robot_Jaw = m_Robot.FindAction("Jaw", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Robot
    private readonly InputActionMap m_Robot;
    private IRobotActions m_RobotActionsCallbackInterface;
    private readonly InputAction m_Robot_LHorizontal;
    private readonly InputAction m_Robot_LVertical;
    private readonly InputAction m_Robot_RHorizontal;
    private readonly InputAction m_Robot_RVertical;
    private readonly InputAction m_Robot_Wrist;
    private readonly InputAction m_Robot_Jaw;
    public struct RobotActions
    {
        private @InputActions m_Wrapper;
        public RobotActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @LHorizontal => m_Wrapper.m_Robot_LHorizontal;
        public InputAction @LVertical => m_Wrapper.m_Robot_LVertical;
        public InputAction @RHorizontal => m_Wrapper.m_Robot_RHorizontal;
        public InputAction @RVertical => m_Wrapper.m_Robot_RVertical;
        public InputAction @Wrist => m_Wrapper.m_Robot_Wrist;
        public InputAction @Jaw => m_Wrapper.m_Robot_Jaw;
        public InputActionMap Get() { return m_Wrapper.m_Robot; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RobotActions set) { return set.Get(); }
        public void SetCallbacks(IRobotActions instance)
        {
            if (m_Wrapper.m_RobotActionsCallbackInterface != null)
            {
                @LHorizontal.started -= m_Wrapper.m_RobotActionsCallbackInterface.OnLHorizontal;
                @LHorizontal.performed -= m_Wrapper.m_RobotActionsCallbackInterface.OnLHorizontal;
                @LHorizontal.canceled -= m_Wrapper.m_RobotActionsCallbackInterface.OnLHorizontal;
                @LVertical.started -= m_Wrapper.m_RobotActionsCallbackInterface.OnLVertical;
                @LVertical.performed -= m_Wrapper.m_RobotActionsCallbackInterface.OnLVertical;
                @LVertical.canceled -= m_Wrapper.m_RobotActionsCallbackInterface.OnLVertical;
                @RHorizontal.started -= m_Wrapper.m_RobotActionsCallbackInterface.OnRHorizontal;
                @RHorizontal.performed -= m_Wrapper.m_RobotActionsCallbackInterface.OnRHorizontal;
                @RHorizontal.canceled -= m_Wrapper.m_RobotActionsCallbackInterface.OnRHorizontal;
                @RVertical.started -= m_Wrapper.m_RobotActionsCallbackInterface.OnRVertical;
                @RVertical.performed -= m_Wrapper.m_RobotActionsCallbackInterface.OnRVertical;
                @RVertical.canceled -= m_Wrapper.m_RobotActionsCallbackInterface.OnRVertical;
                @Wrist.started -= m_Wrapper.m_RobotActionsCallbackInterface.OnWrist;
                @Wrist.performed -= m_Wrapper.m_RobotActionsCallbackInterface.OnWrist;
                @Wrist.canceled -= m_Wrapper.m_RobotActionsCallbackInterface.OnWrist;
                @Jaw.started -= m_Wrapper.m_RobotActionsCallbackInterface.OnJaw;
                @Jaw.performed -= m_Wrapper.m_RobotActionsCallbackInterface.OnJaw;
                @Jaw.canceled -= m_Wrapper.m_RobotActionsCallbackInterface.OnJaw;
            }
            m_Wrapper.m_RobotActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LHorizontal.started += instance.OnLHorizontal;
                @LHorizontal.performed += instance.OnLHorizontal;
                @LHorizontal.canceled += instance.OnLHorizontal;
                @LVertical.started += instance.OnLVertical;
                @LVertical.performed += instance.OnLVertical;
                @LVertical.canceled += instance.OnLVertical;
                @RHorizontal.started += instance.OnRHorizontal;
                @RHorizontal.performed += instance.OnRHorizontal;
                @RHorizontal.canceled += instance.OnRHorizontal;
                @RVertical.started += instance.OnRVertical;
                @RVertical.performed += instance.OnRVertical;
                @RVertical.canceled += instance.OnRVertical;
                @Wrist.started += instance.OnWrist;
                @Wrist.performed += instance.OnWrist;
                @Wrist.canceled += instance.OnWrist;
                @Jaw.started += instance.OnJaw;
                @Jaw.performed += instance.OnJaw;
                @Jaw.canceled += instance.OnJaw;
            }
        }
    }
    public RobotActions @Robot => new RobotActions(this);
    public interface IRobotActions
    {
        void OnLHorizontal(InputAction.CallbackContext context);
        void OnLVertical(InputAction.CallbackContext context);
        void OnRHorizontal(InputAction.CallbackContext context);
        void OnRVertical(InputAction.CallbackContext context);
        void OnWrist(InputAction.CallbackContext context);
        void OnJaw(InputAction.CallbackContext context);
    }
}
